/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package qlhssv;

import java.io.File;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.BorderStyle;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.CreationHelper;
import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.VerticalAlignment;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import ConnectDatabase.ConnectDB;

/**
 *
 * @author Lenovo
 */
public class qligvien extends javax.swing.JPanel {

    /**
     * Creates new form qligvien
     */
    public qligvien() {
        initComponents();
        load_giangvien(); 
        load_Cboxkhoa();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtmagv = new javax.swing.JTextField();
        txthoten = new javax.swing.JTextField();
        btntimkiem = new javax.swing.JButton();
        jTextField7 = new javax.swing.JTextField();
        dcNgaysinh = new com.toedter.calendar.JDateChooser();
        cbGioitinh = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtdchi = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtsdt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cbkhoa = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        btnthem = new javax.swing.JButton();
        btnsua = new javax.swing.JButton();
        btnxoa = new javax.swing.JButton();
        btnXuat = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbgiangvien = new javax.swing.JTable();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quản lí giảng viên");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin giảng viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N

        jLabel2.setText("Mã giảng viên:");

        jLabel3.setText("Họ và tên");

        jLabel5.setText("Ngày sinh");

        jLabel6.setText("Giới tính");

        btntimkiem.setText("Tìm kiếm");
        btntimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiemActionPerformed(evt);
            }
        });

        cbGioitinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ" }));
        cbGioitinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbGioitinhActionPerformed(evt);
            }
        });

        jLabel4.setText("Địa chỉ: ");

        jLabel7.setText("Điện thoại");

        jLabel8.setText("Email:");

        jLabel9.setText("Khoa");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btntimkiem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel4)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtmagv, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                            .addComponent(txthoten)
                            .addComponent(dcNgaysinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbGioitinh, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtdchi)
                            .addComponent(txtsdt)
                            .addComponent(txtEmail)
                            .addComponent(cbkhoa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtmagv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txthoten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(dcNgaysinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbGioitinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtdchi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtsdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cbkhoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btntimkiem)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Thao tác"));

        btnthem.setText("Thêm");
        btnthem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemActionPerformed(evt);
            }
        });

        btnsua.setText("Sửa");
        btnsua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuaActionPerformed(evt);
            }
        });

        btnxoa.setText("Xóa");
        btnxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoaActionPerformed(evt);
            }
        });

        btnXuat.setText("Xuất File");
        btnXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnthem)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnXuat)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnsua)
                        .addGap(18, 18, 18)
                        .addComponent(btnxoa)))
                .addGap(0, 42, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnthem)
                    .addComponent(btnsua)
                    .addComponent(btnxoa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(btnXuat)
                .addContainerGap())
        );

        tbgiangvien.setBackground(new java.awt.Color(204, 204, 255));
        tbgiangvien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbgiangvien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbgiangvienMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbgiangvien);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 585, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(277, 277, 277)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(587, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
Connection conn = null;
    Map<String, String> khoa = new HashMap<>();

    private void load_Cboxkhoa() {
        try {
            conn = ConnectDB.KetnoiDB();
            String sql = "SELECT * FROM khoa";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                cbkhoa.addItem(rs.getString("tenkhoa"));
                khoa.put(rs.getString("tenkhoa"), rs.getString("idkhoa"));
            }

            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    Connection con;
private void load_giangvien(){
    try {
        con=ConnectDB.KetnoiDB();
        String sql="Select*From giaovien";
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery(sql);
        String[] tieude={"ID giảng viên","Họ tên","Ngày sinh","Giới tính","Địa chỉ","Số điện thoại","Email","Khoa"};
        DefaultTableModel tb = new DefaultTableModel(tieude,0);
        while(rs.next()){
            Vector v = new Vector();
             v.add(rs.getString("idgiaovien"));
              v.add(rs.getString("hoten"));
              v.add(rs.getString("ngaysinh"));
              v.add(rs.getString("gioitinh"));
               v.add(rs.getString("diachi"));
              v.add(rs.getString("sodienthoai"));
              v.add(rs.getString("email"));
               v.add(rs.getString("khoa"));
              tb.addRow(v);
        }
        tbgiangvien.setModel(tb);
        con.close();
    } catch (Exception ex) {
        ex.printStackTrace();
    }
}

    private void btnthemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemActionPerformed
      
        String hoten = txthoten.getText().trim();
    Date ngs = new Date(dcNgaysinh.getDate().getTime());
    String gt = cbGioitinh.getSelectedItem().toString();
    String dc = txtdchi.getText().trim();
    String dt = txtsdt.getText().trim();
    String email = txtEmail.getText().trim();
    String kh = cbkhoa.getSelectedItem().toString();

    // Ket noi DB
    try {
        con = ConnectDB.KetnoiDB();
        String sql = "INSERT INTO giaovien (hoten, ngaysinh, gioitinh, diachi, sodienthoai, email, khoa) VALUES (?, ?, ?, ?, ?, ?, ?)";
        PreparedStatement st = con.prepareStatement(sql);
        st.setString(1, hoten);
        st.setDate(2, ngs);
        st.setString(3, gt);
        st.setString(4, dc);
        st.setString(5, dt);
        st.setString(6, email);
        st.setString(7, kh);
        st.execute();
        con.close();

        JOptionPane.showMessageDialog(this, "Thêm mới thành công!");
        load_giangvien();
    } catch (Exception ex) {
        ex.printStackTrace();
    }
        
    }//GEN-LAST:event_btnthemActionPerformed

    private void btnsuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuaActionPerformed
        try {
        String mgv = txtmagv.getText().trim();  // Assuming this is the primary key, idgiaovien
        String hoten = txthoten.getText().trim();
        Date ngs = new Date(dcNgaysinh.getDate().getTime());  // Correct Date handling
        String gt = cbGioitinh.getSelectedItem().toString();
        String dt = txtsdt.getText().trim();
        String email = txtEmail.getText().trim();
        String dc = txtdchi.getText().trim();
        String kh = cbkhoa.getSelectedItem().toString();
        String ma = khoa.get(kh);

        // Kết nối DB
        con = ConnectDB.KetnoiDB();

        // Sử dụng PreparedStatement để đảm bảo an toàn và chính xác
        String sql = "UPDATE giaovien SET hoten = ?, ngaysinh = ?, gioitinh = ?, diachi = ?, sodienthoai = ?, email = ?, khoa = ? WHERE idgiaovien = ?";
        PreparedStatement st = con.prepareStatement(sql);

        // Set the values for the placeholders
        st.setString(1, hoten);
        st.setDate(2, new java.sql.Date(ngs.getTime()));  // Ensure the correct type for Date
        st.setString(3, gt);
        st.setString(4, dc);
        st.setString(5, dt);
        st.setString(6, email);
        st.setString(7, kh);
        st.setString(8, mgv);  // Set the idgiaovien as the condition for the WHERE clause

        // Thực hiện câu lệnh cập nhật
        st.executeUpdate();

        // Đóng kết nối
        con.close();

        // Thông báo khi cập nhật thành công
        JOptionPane.showMessageDialog(this, "Sửa thành công!");
        load_giangvien();
    } catch (Exception ex) {
        ex.printStackTrace();
    }
    }//GEN-LAST:event_btnsuaActionPerformed

    private void btnxoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoaActionPerformed
        try {
            String mgv = txtmagv.getText();
        con=ConnectDB.KetnoiDB();
        //Tao đối tương Statement
        String sql="Delete From giaovien where idgiaovien='"+mgv+"'";
        Statement st= con.createStatement();
        st.executeUpdate(sql);
        con.close();
        JOptionPane.showMessageDialog(this,"Xóa thành công");
        load_giangvien();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnxoaActionPerformed

    private void btntimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiemActionPerformed
         try {
            //B1:Lấy dữ liệu từ các compoment đưa vào biến 
            String mgv  = txtmagv.getText().trim();
            String hoten  = txthoten.getText().trim();
            String gt = cbGioitinh.getSelectedItem().toString();
            if(gt.equals("--Chọn giới tính--")){
                gt="";
            }
            //b2:Kết nối DB
            con=ConnectDB.KetnoiDB();
            //Tạo đối tượng statement để thực hiện truy vấn
            String sql="Select *From giaovien Where idgiaovien like '%"+mgv+"%'and hoten like N'%"+hoten+"%' and gioitinh like N'%"+gt+"%'";
            Statement st= con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            String[] tieude={"ID giảng viên","Họ tên","Ngày sinh","Giới tính","Địa chỉ","Số điện thoại","Email","Khoa"};
          DefaultTableModel tb = new DefaultTableModel(tieude,0);
          while(rs.next()){
            Vector v = new Vector();
             v.add(rs.getString("idgiaovien"));
              v.add(rs.getString("hoten"));
              v.add(rs.getString("ngaysinh"));
              v.add(rs.getString("gioitinh"));
               v.add(rs.getString("diachi"));
              v.add(rs.getString("sodienthoai"));
              v.add(rs.getString("email"));
               v.add(rs.getString("khoa"));
              tb.addRow(v);
        
        }
        tbgiangvien.setModel(tb);
        con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btntimkiemActionPerformed

    private void cbGioitinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbGioitinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbGioitinhActionPerformed

    private void tbgiangvienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbgiangvienMouseClicked
       int i=tbgiangvien.getSelectedRow();
        DefaultTableModel tb=(DefaultTableModel)tbgiangvien.getModel();
        txtmagv.setText(tb.getValueAt(i, 0).toString());
        txthoten.setText(tb.getValueAt(i, 1).toString());
        String ngay=tb.getValueAt(i, 2).toString();
        java.util.Date ngs;
        try {
            ngs = new SimpleDateFormat("yyyy-MM-dd").parse(ngay);
            dcNgaysinh.setDate(ngs);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        cbGioitinh.setSelectedItem(tb.getValueAt(i, 3).toString());
        txtdchi.setText(tb.getValueAt(i, 4).toString());
        txtsdt.setText(tb.getValueAt(i, 5).toString());
        txtEmail.setText(tb.getValueAt(i, 6).toString());
        cbkhoa.setSelectedItem(tb.getValueAt(i, 6).toString());
        
    }//GEN-LAST:event_tbgiangvienMouseClicked
 private static CellStyle DinhdangHeader(XSSFSheet sheet) {
        // Create font
        Font font = sheet.getWorkbook().createFont();
        font.setFontName("Times New Roman");
        font.setBold(true);
        font.setFontHeightInPoints((short) 12); // font size
        font.setColor(IndexedColors.WHITE.getIndex()); // text color

        // Create CellStyle
        CellStyle cellStyle = sheet.getWorkbook().createCellStyle();
        cellStyle.setFont(font);
        cellStyle.setAlignment(HorizontalAlignment.CENTER);
        cellStyle.setVerticalAlignment(VerticalAlignment.TOP);
        cellStyle.setFillForegroundColor(IndexedColors.DARK_GREEN.getIndex());
        cellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);
        cellStyle.setBorderBottom(BorderStyle.THIN);
        cellStyle.setWrapText(true);
        return cellStyle;
    }
    private void btnXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatActionPerformed
        try {

            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet spreadsheet = workbook.createSheet("tacgia");
           CreationHelper createHelper = workbook.getCreationHelper();

            XSSFRow row = null;
            Cell cell = null;

            row = spreadsheet.createRow((short) 2);
            row.setHeight((short) 500);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("DANH SÁCH GIẢNG vIÊN");
            //Tạo dòng tiêu đều của bảng
            row = spreadsheet.createRow((short) 3);
            row.setHeight((short) 500);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("STT");
            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("Mã Giảng Viên");
            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue("Tên Giảng Viên");
            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue("Ngày Sinh");
            cell = row.createCell(4, CellType.STRING);
            cell.setCellValue("Giới Tính");
            cell = row.createCell(5, CellType.STRING);
            cell.setCellValue("Địa Chỉ");
            cell = row.createCell(6, CellType.STRING);
            cell.setCellValue("Số Điện Thoại");
            cell = row.createCell(7, CellType.STRING);
            cell.setCellValue("Email");
            cell = row.createCell(8, CellType.STRING);
            cell.setCellValue("Khoa");
            //Kết nối DB
             
            con = ConnectDB.KetnoiDB();
           
            String sql = "Select * From giaovien";
            PreparedStatement st = con.prepareStatement(sql);
            ResultSet rs = st.executeQuery();
            int i = 0;
            while (rs.next()) {
                row = spreadsheet.createRow((short) 4 + i);
                row.setHeight((short) 400);
                row.createCell(0).setCellValue(i + 1);
                row.createCell(1).setCellValue(rs.getString("idgiaovien"));
                row.createCell(2).setCellValue(rs.getString("hoten"));
                
                //Định dạng ngày tháng trong excel
                Date ngay= new Date(rs.getDate("ngaysinh").getTime());
//                CellType cellStyle = workbook.createCellStyle();
//                cellStyle.setDataFormat(createHelper.createDataFormat().getFormat("dd/MM/yyyy"));
                cell = row.createCell(3);
                cell.setCellValue(ngay);
//                cell.setCellStyle(cellStyle);
                
                row.createCell(4).setCellValue(rs.getString("gioitinh"));
                row.createCell(5).setCellValue(rs.getString("diachi"));
                row.createCell(6).setCellValue(rs.getString("sodienthoai"));
                row.createCell(7).setCellValue(rs.getString("email"));
                row.createCell(8).setCellValue(rs.getString("khoa"));
                i++;
            }
            File f=new File("D:\\GiangVien.xlsx");
           FileOutputStream out = new FileOutputStream(f);
            workbook.write(out);
            out.close();
            st.close();
            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnXuatActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnXuat;
    private javax.swing.JButton btnsua;
    private javax.swing.JButton btnthem;
    private javax.swing.JButton btntimkiem;
    private javax.swing.JButton btnxoa;
    private javax.swing.JComboBox<String> cbGioitinh;
    private javax.swing.JComboBox<String> cbkhoa;
    private com.toedter.calendar.JDateChooser dcNgaysinh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTable tbgiangvien;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtdchi;
    private javax.swing.JTextField txthoten;
    private javax.swing.JTextField txtmagv;
    private javax.swing.JTextField txtsdt;
    // End of variables declaration//GEN-END:variables
}
